name: CI - Seguridad y Calidad de C√≥digo

on:
  push:
    branches: [main, kathy]
  pull_request:
    branches: [main, kathy]

jobs:
  seguridad:
    name: "üîí An√°lisis de Seguridad"
    runs-on: ubuntu-latest
    
    steps:
      - name: "üõ°Ô∏è Checkout del c√≥digo"
        uses: actions/checkout@v3

      - name: "üì¶ Instalaci√≥n de dependencias con auditor√≠a"
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - run: npm install
      
      # Escanea vulnerabilidades en dependencias
      - name: "üîç Auditor√≠a de dependencias (npm audit)"
        run: npm audit --audit-level=moderate
      
      # Escanea secretos expuestos en el c√≥digo
      - name: "üïµÔ∏è Detecci√≥n de secretos (gitleaks)"
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml  # Archivo de configuraci√≥n opcional

  calidad_codigo:
    name: "üßπ An√°lisis de Calidad"
    needs: seguridad  # Espera que termine el job de seguridad
    runs-on: ubuntu-latest
    
    steps:
      - name: "üì• Checkout del repositorio"
        uses: actions/checkout@v3

      - name: "üîÑ Configurar Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: "üì¶ Instalar linters"
        run: |
          # Instala paquetes necesarios solo si no existen
          if [ ! -f package.json ]; then npm init -y; fi
          npm install eslint stylelint stylelint-config-standard htmlhint --save-dev
          
          # Configuraci√≥n b√°sica si no existe
          [ ! -f .eslintrc.json ] && echo '{ "extends": "eslint:recommended" }' > .eslintrc.json
          [ ! -f .stylelintrc.json ] && echo '{ "extends": "stylelint-config-standard" }' > .stylelintrc.json
          [ ! -f .htmlhintrc ] && echo '{}' > .htmlhintrc

      # --------------------------------------------------
      # LINTERS (Herramientas de an√°lisis est√°tico)
      # --------------------------------------------------
      
      # ESLint: Analiza c√≥digo JavaScript/JSX
      # - Detecta errores, malas pr√°cticas y problemas de estilo
      # - --quiet: Solo muestra errores (no warnings)
      # - --max-warnings 0: Falla si hay warnings
      - name: "üîç Lint JavaScript (ESLint)"
        run: npx eslint ./app/**/*.js --quiet --max-warnings 0

      # Stylelint: Analiza c√≥digo CSS/SCSS
      # - --fix: Corrige autom√°ticamente problemas simples
      # - --allow-empty-input: No falla si no hay archivos CSS
      - name: "üé® Lint CSS (Stylelint)"
        run: npx stylelint "./app/**/*.css" --fix --quiet --allow-empty-input

      # HTMLHint: Analiza archivos HTML
      # - --config: Usa configuraci√≥n personalizada
      - name: "üìÑ Lint HTML (HTMLHint)"
        run: npx htmlhint "./app/**/*.html" --config .htmlhintrc

      # --------------------------------------------------
      # AN√ÅLISIS ADICIONALES
      # --------------------------------------------------
      
      # Verifica dependencias desactualizadas
      - name: "üîÑ Chequear dependencias desactualizadas"
        run: npx npm-check-updates --errorLevel 2
      
      # Analiza el tama√±o del bundle (opcional)
      - name: "üìä Analizar tama√±o del bundle (opcional)"
        if: false  # Deshabilitado por defecto
        run: npx source-map-explorer 'app/**/*.js'